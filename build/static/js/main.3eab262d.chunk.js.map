{"version":3,"sources":["components/SearchForm.js","components/Home.js","components/Country.js","components/CountryList.js","components/Loader.js","App.js","index.js"],"names":["container","zIndex","width","margin","SearchForm","search","style","htmlFor","type","name","placeholder","onChange","e","homeStyle","display","justifyContent","background","padding","label","color","Home","data","date","TotalConfirmed","TotalDeaths","TotalRecovered","card","minWidth","minHeight","flexDirection","borderRadius","Country","height","flexWrap","CountryList","countries","input","country","map","toLowerCase","includes","ID","alignItems","fontSize","Loader","App","useState","setCountries","worldCases","setWorldCases","setDate","setSearch","loading","setLoading","useEffect","getData","a","fetch","response","json","Countries","Global","Date","split","console","log","className","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eab262d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchForm = ({ search }) => {\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsearch(e)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form style={container}>\r\n\t\t\t<label htmlFor=\"search\">Search countries</label>\r\n\t\t\t<br />\r\n\t\t\t<input type=\"text\" name='search' placeholder='E.g. Poland' onChange={onChange} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst container = {\r\n\tzIndex: '10',\r\n\twidth: '100%',\r\n\tmargin: '1rem 0'\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\n\r\nconst Home = ({ data, date }) => {\r\n\r\n\t// const formattedDate = newDate[0].split('-').reverse().join('/');\r\n\t// const formattedTime = newDate[1].split('.')[0].split(':').slice(0, 2).join(':');\r\n\r\n\tconst formatDate = () => {\r\n\t\tconst formattedDate = date[0].split('-').reverse().join('/');\r\n\t\tconst formattedTime = date[1].split('.')[0].split(':').slice(0, 2).join(':');\r\n\t\tconst finalDate = `${formattedDate} at ${formattedTime}`\r\n\t\treturn finalDate;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={homeStyle}>\r\n\t\t\t{/* <h4><span style={label}>Last Updated: <br /></span>{formatDate()}</h4> */}\r\n\t\t\t<h3><span style={label}>Total Cases: </span>{data.TotalConfirmed}</h3>\r\n\t\t\t<h3><span style={label}>Total Deaths: </span>{data.TotalDeaths}</h3>\r\n\t\t\t<h3><span style={label}>Total Recoveries: </span>{data.TotalRecovered}</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst homeStyle = {\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'space-around',\r\n\tbackground: 'rgb(10, 70, 79)',\r\n\tpadding: '1.5rem 0',\r\n\twidth: '100%',\r\n\tzIndex: '10'\r\n}\r\n\r\nconst label = {\r\n\tcolor: 'gold',\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nconst Country = ({ data }) => {\r\n\r\n\tconst { Country, TotalConfirmed, TotalDeaths, TotalRecovered } = data;\r\n\r\n\treturn (\r\n\t\t<div style={card}>\r\n\t\t\t<h2>{Country}</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Total Cases: {TotalConfirmed}</h3>\r\n\t\t\t\t<h3>Total Deaths: {TotalDeaths}</h3>\r\n\t\t\t\t<h3>Total Recoveries: {TotalRecovered}</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst card = {\r\n\tbackground: 'rgb(10, 70, 79)',\r\n\tmargin: '1rem',\r\n\tpadding: '2rem',\r\n\tminWidth: '25%',\r\n\tminHeight: '15rem',\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\tjustifyContent: 'space-around',\r\n\tborderRadius: '10px',\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nimport Country from './Country';\r\n\r\nconst CountryList = ({ countries, input }) => {\r\n\r\n\tconst country = countries.map((country) => {\r\n\t\tif (country.Country.toLowerCase().includes(input.toLowerCase())) {\r\n\t\t\treturn <Country key={country.ID} data={country} />\r\n\t\t} else {\r\n\t\t\tcountries.map(country => <Country key={country.ID} data={country} />);\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div style={container}>\r\n\t\t\t{country}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst container = {\r\n\theight: 'auto',\r\n\tcolor: 'white',\r\n\tdisplay: 'flex',\r\n\tflexWrap: 'wrap',\r\n\tjustifyContent: 'center',\r\n}\r\n\r\nexport default CountryList;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div style={container}>\r\n\t\t\t<h1>Loading Data...</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst container = {\r\n\twidth: '100%',\r\n\theight: '100vh',\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'center',\r\n\talignItems: 'center',\r\n\tfontSize: '2rem'\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SearchForm from './components/SearchForm';\nimport Home from './components/Home';\nimport CountryList from './components/CountryList';\nimport Loader from './components/Loader';\n\nconst App = () => {\n\n\tconst [countries, setCountries] = useState([]);\n\tconst [worldCases, setWorldCases] = useState([{}]);\n\tconst [date, setDate] = useState('');\n\tconst [search, setSearch] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\tconst getData = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst response = await fetch(`https://api.covid19api.com/summary`);\n\t\t\tconst data = await response.json();\n\t\t\tsetCountries(data.Countries);\n\t\t\tsetWorldCases(data.Global);\n\t\t\tsetDate(data.Global.Date.split('T'))\n\t\t\tsetLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting data', error);\n\t\t}\n\t}\n\n\tconst searchCountries = (e) => {\n\t\tsetSearch(e.target.value);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\t!loading ?\n\t\t\t\t\t(\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Home data={worldCases} date={date} />\n\t\t\t\t\t\t\t<SearchForm search={searchCountries} />\n\t\t\t\t\t\t\t<CountryList countries={countries} input={search} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) :\n\t\t\t\t\t<Loader />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}